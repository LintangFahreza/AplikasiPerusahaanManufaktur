/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package PerusahaanManufaktur;

import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author LENOVO
 */
public class produk extends javax.swing.JFrame {

    /**
     * Creates new form produk
     */
    public produk() {
        koneksi.koneksi();
        initComponents();
        tampilDataProduk();
    }
    
    // Fungsi untuk menampilkan data produk
    public void tampilDataProduk() {
        try {
            // Membuat model tabel
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("Kode Produk");
            model.addColumn("Nama Produk");
            model.addColumn("Harga Produk");

            // Query SQL untuk mengambil data produk
            String sql = "SELECT * FROM produk";
            Connection conn = koneksi.con; // Mengakses koneksi
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            // Menambah data ke model tabel
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("kode_produk"),
                    rs.getString("nama_produk"),
                    rs.getInt("harga_produk")
                });
            }

            // Set model ke JTable
            tabelProduk.setModel(model);

        } catch (SQLException e) {
            System.err.println("Error: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtKodeProduk = new javax.swing.JTextField();
        txtNamaProduk = new javax.swing.JTextField();
        txtHargaProduk = new javax.swing.JTextField();
        btntambah = new javax.swing.JButton();
        btnedit = new javax.swing.JButton();
        btnhapus = new javax.swing.JButton();
        btnrefresh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelProduk = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("PRODUK");

        jButton1.setText("HOME");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Kode Produk");

        jLabel3.setText("Harga Produk");

        jLabel4.setText("Nama Produk");

        txtKodeProduk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKodeProdukActionPerformed(evt);
            }
        });

        txtHargaProduk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHargaProdukActionPerformed(evt);
            }
        });

        btntambah.setText("TAMBAH");
        btntambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntambahActionPerformed(evt);
            }
        });

        btnedit.setText("EDIT");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });

        btnhapus.setText("HAPUS");
        btnhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapusActionPerformed(evt);
            }
        });

        btnrefresh.setText("REFRESH");
        btnrefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrefreshActionPerformed(evt);
            }
        });

        tabelProduk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelProduk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelProdukMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelProduk);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(373, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtKodeProduk, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtNamaProduk, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtHargaProduk, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btntambah)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnedit)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnhapus)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnrefresh)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(39, 39, 39))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtKodeProduk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtNamaProduk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtHargaProduk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btntambah)
                    .addComponent(btnedit)
                    .addComponent(btnhapus)
                    .addComponent(btnrefresh))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        home hm = new home();
        hm.setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtKodeProdukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKodeProdukActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKodeProdukActionPerformed

    private void txtHargaProdukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHargaProdukActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHargaProdukActionPerformed

    private void btntambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntambahActionPerformed
        // TODO add your handling code here:
        // Ambil data dari input form
    String kodeProduk = txtKodeProduk.getText().trim();
    String namaProduk = txtNamaProduk.getText().trim();
    String hargaProdukText = txtHargaProduk.getText().trim();
    
    // Pengecekan jika ada input yang kosong
    if (kodeProduk.isEmpty() || namaProduk.isEmpty() || hargaProdukText.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Semua kolom harus diisi!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;  // Jika ada yang kosong, keluar dari fungsi
    }

    try {
        // Parsing harga produk menjadi integer
        int hargaProduk = Integer.parseInt(hargaProdukText);
        
        // Query untuk insert data ke database
        String sql = "INSERT INTO produk (kode_produk, nama_produk, harga_produk) VALUES ('" + kodeProduk + "', '" + namaProduk + "', " + hargaProduk + ")";
        Connection conn = koneksi.con;
        Statement stmt = conn.createStatement();
        stmt.executeUpdate(sql);
        
        // Memperbarui JTable untuk menampilkan data terbaru
        tampilDataProduk();
        
        // Membersihkan field input setelah berhasil
        txtKodeProduk.setText("");
        txtNamaProduk.setText("");
        txtHargaProduk.setText("");
        
        // Menampilkan pesan sukses
        JOptionPane.showMessageDialog(this, "Produk berhasil ditambahkan!");
        
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    } catch (NumberFormatException e) {
        // Jika input harga bukan angka
        JOptionPane.showMessageDialog(this, "Harga produk harus berupa angka!", "Peringatan", JOptionPane.WARNING_MESSAGE);
    }
        
    }//GEN-LAST:event_btntambahActionPerformed

    private void tabelProdukMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelProdukMouseClicked
        // TODO add your handling code here:
        // Ambil baris yang dipilih
    int baris = tabelProduk.getSelectedRow();
    
    // Pastikan baris yang dipilih valid
    if (baris >= 0) {
        // Ambil data dari tabel berdasarkan baris yang dipilih
        String kodeProduk = tabelProduk.getValueAt(baris, 0).toString(); // Kolom 0 untuk kode produk
        String namaProduk = tabelProduk.getValueAt(baris, 1).toString(); // Kolom 1 untuk nama produk
        String hargaProduk = tabelProduk.getValueAt(baris, 2).toString(); // Kolom 2 untuk harga produk
        
        // Tampilkan data di dalam form input agar bisa diedit
        txtKodeProduk.setText(kodeProduk);
        txtNamaProduk.setText(namaProduk);
        txtHargaProduk.setText(hargaProduk);
    }
    }//GEN-LAST:event_tabelProdukMouseClicked

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        // TODO add your handling code here:
        // Ambil data dari form input
    String kodeProduk = txtKodeProduk.getText();
    String namaProduk = txtNamaProduk.getText();
    String hargaProduk = txtHargaProduk.getText();
    
    // Periksa apakah input kosong
    if (kodeProduk.isEmpty() || namaProduk.isEmpty() || hargaProduk.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Harap lengkapi semua field!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    // Query untuk update data produk di database
    String sql = "UPDATE produk SET nama_produk = '" + namaProduk + "', harga_produk = '" + hargaProduk + "' WHERE kode_produk = '" + kodeProduk + "'";

    try {
        // Eksekusi query update
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/db_perusahaan_manufaktur", "root", "");
        Statement stmt = con.createStatement();
        int rowsAffected = stmt.executeUpdate(sql);

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Data berhasil diperbarui!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            
            // Refresh tabel setelah data diperbarui
            txtHargaProduk.setText("");
            txtKodeProduk.setText("");
            txtNamaProduk.setText("");
            tampilDataProduk();
        } else {
            JOptionPane.showMessageDialog(this, "Gagal memperbarui data.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btneditActionPerformed

    private void btnhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapusActionPerformed
        // TODO add your handling code here:
        String kodeProduk = txtKodeProduk.getText();
    
    // Periksa apakah kode produk ada
    if (kodeProduk.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Pilih produk yang ingin dihapus!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Query untuk menghapus produk berdasarkan kode produk
    String sql = "DELETE FROM produk WHERE kode_produk = '" + kodeProduk + "'";

    try {
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/db_perusahaan_manufaktur", "root", "");
        Statement stmt = con.createStatement();
        int rowsAffected = stmt.executeUpdate(sql);

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Data berhasil dihapus!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            
            // Refresh tabel setelah data dihapus
            txtHargaProduk.setText("");
            txtKodeProduk.setText("");
            txtNamaProduk.setText("");
            tampilDataProduk();
        } else {
            JOptionPane.showMessageDialog(this, "Gagal menghapus data.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan: Produk masih digunakan di produksi, tidak bisa dihapus.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnhapusActionPerformed

    private void btnrefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrefreshActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) tabelProduk.getModel();
    model.setRowCount(0); // Menghapus semua data yang ada di tabel
    
    try {
        // Query untuk mengambil semua data produk
        String sql = "SELECT * FROM produk";
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/db_perusahaan_manufaktur", "root", "");
        Statement stmt = con.createStatement();
        ResultSet rs = stmt.executeQuery(sql);
        
        // Menampilkan data ke tabel
        while (rs.next()) {
            String kodeProduk = rs.getString("kode_produk");
            String namaProduk = rs.getString("nama_produk");
            String hargaProduk = rs.getString("harga_produk");
            
            model.addRow(new Object[]{kodeProduk, namaProduk, hargaProduk});
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnrefreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(produk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(produk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(produk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(produk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new produk().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnhapus;
    private javax.swing.JButton btnrefresh;
    private javax.swing.JButton btntambah;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelProduk;
    private javax.swing.JTextField txtHargaProduk;
    private javax.swing.JTextField txtKodeProduk;
    private javax.swing.JTextField txtNamaProduk;
    // End of variables declaration//GEN-END:variables
}
